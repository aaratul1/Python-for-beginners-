"""
тЬЕ ржкрж╛ржЗржержирзЗрж░ ржЕржкрж╛рж░рзЗржЯрж░ржЧрзБрж▓рзЛ ржорзВрж▓ржд рзн ржкрзНрж░ржХрж╛рж░рзЗрж░:
ржХрзНрж░.	ржЕржкрж╛рж░рзЗржЯрж░ ржЯрж╛ржЗржк	ржмрж╛ржВрж▓рж╛ ржмрзНржпрж╛ржЦрзНржпрж╛
1	Arithmetic Operators	ржЧрж╛ржгрж┐рждрж┐ржХ ржЕржкрж╛рж░рзЗржЯрж░
2	Assignment Operators	ржорж╛ржи рж╕рзЗржЯ ржХрж░рж╛рж░ ржЕржкрж╛рж░рзЗржЯрж░
3	Comparison Operators	рждрзБрж▓ржирж╛ ржХрж░рж╛рж░ ржЕржкрж╛рж░рзЗржЯрж░
4	Logical Operators	рж▓ржЬрж┐ржХрзНржпрж╛рж▓ (ржпрзБржХрзНрждрж┐ ржнрж┐рждрзНрждрж┐ржХ) ржЕржкрж╛рж░рзЗржЯрж░
5	Identity Operators	ржЖржЗржбрзЗржирзНржЯрж┐ржЯрж┐ ржпрж╛ржЪрж╛ржЗ
6	Membership Operators	рж╕ржжрж╕рзНржпрждрж╛ ржпрж╛ржЪрж╛ржЗ
7	Bitwise Operators	ржмрж┐ржЯ ржнрж┐рждрзНрждрж┐ржХ ржЕржкрж╛рж░рзЗржЯрж░

1я╕ПтГг Arithmetic Operators (ржЧрж╛ржгрж┐рждрж┐ржХ ржЕржкрж╛рж░рзЗржЯрж░)
ржЕржкрж╛рж░рзЗржЯрж░	ржХрж╛ржЬ	ржЙржжрж╛рж╣рж░ржг	ржлрж▓рж╛ржлрж▓
+	ржпрзЛржЧ	5 + 3	8
-	ржмрж┐рзЯрзЛржЧ	5 - 3	2
*	ржЧрзБржг	5 * 3	15
/	ржнрж╛ржЧ	5 / 2	2.5
//	ржкрзВрж░рзНржгрж╕ржВржЦрзНржпрж╛рзЯ ржнрж╛ржЧ	5 // 2	2
%	ржнрж╛ржЧрж╢рзЗрж╖	5 % 2	1
**	ржШрж╛ржд	2 ** 3	8

2я╕ПтГг Assignment Operators (ржорж╛ржи рж╕рзЗржЯ ржХрж░рж╛рж░ ржЕржкрж╛рж░рзЗржЯрж░)
ржЕржкрж╛рж░рзЗржЯрж░	ржХрж╛ржЬ	ржЙржжрж╛рж╣рж░ржг	рж╕ржорждрзБрж▓рзНржп
=	ржорж╛ржи ржирж┐рж░рзНржзрж╛рж░ржг	x = 5	-
+=	ржпрзЛржЧ ржХрж░рзЗ ржорж╛ржи рж╕рзЗржЯ	x += 2	x = x + 2
-=	ржмрж┐рзЯрзЛржЧ ржХрж░рзЗ ржорж╛ржи рж╕рзЗржЯ	x -= 2	x = x - 2
*=	ржЧрзБржг ржХрж░рзЗ ржорж╛ржи рж╕рзЗржЯ	x *= 2	x = x * 2
/=	ржнрж╛ржЧ ржХрж░рзЗ ржорж╛ржи рж╕рзЗржЯ	x /= 2	x = x / 2
//=	ржкрзВрж░рзНржгрж╕ржВржЦрзНржпрж╛рзЯ ржнрж╛ржЧ	x //= 2	x = x // 2
%=	ржнрж╛ржЧрж╢рзЗрж╖ ржирж┐рж░рзНржзрж╛рж░ржг	x %= 2	x = x % 2
**=	ржШрж╛ржд ржирж┐рж░рзНржзрж╛рж░ржг	x **= 3	x = x ** 3

3я╕ПтГг Comparison Operators (рждрзБрж▓ржирж╛ржорзВрж▓ржХ ржЕржкрж╛рж░рзЗржЯрж░)
ржЕржкрж╛рж░рзЗржЯрж░	ржХрж╛ржЬ	ржЙржжрж╛рж╣рж░ржг	ржлрж▓рж╛ржлрж▓
==	рж╕ржорж╛ржи ржХрж┐ржирж╛	x == y	True ржмрж╛ False
!=	рж╕ржорж╛ржи ржирж╛ ржХрж┐ржирж╛	x != y	True ржмрж╛ False
>	ржмрзЬ ржХрж┐ржирж╛	x > y	True
<	ржЫрзЛржЯ ржХрж┐ржирж╛	x < y	False
>=	ржмрзЬ ржмрж╛ рж╕ржорж╛ржи	x >= y	True
<=	ржЫрзЛржЯ ржмрж╛ рж╕ржорж╛ржи	x <= y	False

4я╕ПтГг Logical Operators (ржпрзБржХрзНрждрж┐ ржнрж┐рждрзНрждрж┐ржХ ржЕржкрж╛рж░рзЗржЯрж░)
ржЕржкрж╛рж░рзЗржЯрж░	ржХрж╛ржЬ	ржЙржжрж╛рж╣рж░ржг	ржлрж▓рж╛ржлрж▓
and	ржжрзБржЯрж┐ рж╢рж░рзНрждржЗ рж╕рждрзНржп рж╣рж▓рзЗ	x > 3 and x < 10	True
or	ржпрзЗржХрзЛржирзЛ ржПржХржЯрж┐ рж╕рждрзНржп рж╣рж▓рзЗржЗ	x > 3 or x < 2	True
not	рж╕рждрзНржпржХрзЗ ржорж┐ржерзНржпрж╛ ржХрж░рзЗ	not(x > 3)	False

5я╕ПтГг Identity Operators (ржкрж░рж┐ржЪржпрж╝ ржпрж╛ржЪрж╛ржЗ ржХрж░рзЗ)
ржЕржкрж╛рж░рзЗржЯрж░	ржХрж╛ржЬ	ржЙржжрж╛рж╣рж░ржг	ржлрж▓рж╛ржлрж▓
is	ржПржХржЗ ржЕржмржЬрзЗржХрзНржЯ ржХрж┐ржирж╛	x is y	True
is not	ржЖрж▓рж╛ржжрж╛ ржЕржмржЬрзЗржХрзНржЯ ржХрж┐ржирж╛	x is not y	True

ЁЯУЭ ржжрзБржЗ ржнрзЗрж░рж┐рзЯрзЗржмрж▓ ржПржХржЗ ржнрзНржпрж╛рж▓рзБ рж░рж╛ржЦрж▓рзЗржУ рждрж╛рж░рж╛ ржПржХржЗ ржЕржмржЬрзЗржХрзНржЯ ржХрж┐ржирж╛ рж╕рзЗржЯрж╛ is ржжрж┐рзЯрзЗ ржЪрзЗржХ ржХрж░рж╛ рж╣рзЯред

6я╕ПтГг Membership Operators (рж╕ржжрж╕рзНржпрждрж╛ ржпрж╛ржЪрж╛ржЗ)
ржЕржкрж╛рж░рзЗржЯрж░	ржХрж╛ржЬ	ржЙржжрж╛рж╣рж░ржг	ржлрж▓рж╛ржлрж▓
in	рж╕ржжрж╕рзНржп ржЖржЫрзЗ ржХрж┐ржирж╛	'a' in 'ratul'	True
not in	рж╕ржжрж╕рзНржп ржирзЗржЗ ржХрж┐ржирж╛	'z' not in 'ratul'	True

7я╕ПтГг Bitwise Operators (ржмрж┐ржЯрзЗ ржХрж╛ржЬ ржХрж░рзЗ)
ржЕржкрж╛рж░рзЗржЯрж░	ржирж╛ржо	ржХрж╛ржЬ
&	AND	ржжрзБржЗ ржмрж┐ржЯрзЗржЗ рзз рж╣рж▓рзЗ рзз
`	`	OR
^	XOR	ржПржХржЯрж╛ржЗ рзз рж╣рж▓рзЗ рзз
~	NOT	ржмрж┐ржЯ ржЙрж▓рзНржЯрзЗ ржжрзЗрзЯ
<<	Left Shift	ржмрж┐ржЯ ржмрж╛ржБрзЯрзЗ рж╕рж░рж╛рзЯ
>>	Right Shift	ржмрж┐ржЯ ржбрж╛ржирзЗ рж╕рж░рж╛рзЯ
"""




'''
ржкрж╛ржЗржержирзЗрж░ рзн ржкрзНрж░ржХрж╛рж░ ржЕржкрж╛рж░рзЗржЯрж░: ржЙржжрж╛рж╣рж░ржгрж╕рж╣


1я╕ПтГг Arithmetic Operators (ржЧрж╛ржгрж┐рждрж┐ржХ ржЕржкрж╛рж░рзЗржЯрж░)

a = 10
b = 3

print("ржпрзЛржЧ (a + b):", a + b)
print("ржмрж┐рзЯрзЛржЧ (a - b):", a - b)
print("ржЧрзБржг (a * b):", a * b)
print("ржнрж╛ржЧ (a / b):", a / b)
print("ржкрзВрж░рзНржг ржнрж╛ржЧ (a // b):", a // b)
print("ржнрж╛ржЧрж╢рзЗрж╖ (a % b):", a % b)
print("ржШрж╛ржд (a ** b):", a ** b)
2я╕ПтГг Assignment Operators (ржорж╛ржи рж╕рзЗржЯ ржЕржкрж╛рж░рзЗржЯрж░)

x = 5
print("x =", x)

x += 2
print("x += 2 тЖТ", x)

x -= 1
print("x -= 1 тЖТ", x)

x *= 3
print("x *= 3 тЖТ", x)

x /= 2
print("x /= 2 тЖТ", x)

x %= 4
print("x %= 4 тЖТ", x)

x **= 2
print("x **= 2 тЖТ", x)



3я╕ПтГг Comparison Operators (рждрзБрж▓ржирж╛ржорзВрж▓ржХ ржЕржкрж╛рж░рзЗржЯрж░)

a = 10
b = 7

print("a == b:", a == b)
print("a != b:", a != b)
print("a > b:", a > b)
print("a < b:", a < b)
print("a >= b:", a >= b)
print("a <= b:", a <= b)
4я╕ПтГг Logical Operators (ржпрзБржХрзНрждрж┐ ржирж┐рж░рзНржнрж░ ржЕржкрж╛рж░рзЗржЯрж░)

x = True
y = False

print("x and y:", x and y)
print("x or y:", x or y)
print("not x:", not x)

# ржмрж╛рж╕рзНрждржм рж╢рж░рзНржд ржЙржжрж╛рж╣рж░ржг
age = 20
print("ржмрзЯрж╕ 18 ржерзЗржХрзЗ 25 ржПрж░ ржоржзрзНржпрзЗ?", age >= 18 and age <= 25)


5я╕ПтГг Identity Operators (ржкрж░рж┐ржЪржпрж╝ ржпрж╛ржЪрж╛ржЗ)

x = [1, 2, 3]
y = [1, 2, 3]
z = x

print("x == y:", x == y)    # ржорж╛ржи ржПржХржЗ
print("x is y:", x is y)    # ржЖрж▓рж╛ржжрж╛ ржЕржмржЬрзЗржХрзНржЯ
print("x is z:", x is z)    # ржПржХржЗ ржЕржмржЬрзЗржХрзНржЯ
print("x is not y:", x is not y)

6я╕ПтГг Membership Operators (рж╕ржжрж╕рзНржпрждрж╛ ржпрж╛ржЪрж╛ржЗ)

my_list = [10, 20, 30, 40]

print("20 in my_list:", 20 in my_list)
print("50 in my_list:", 50 in my_list)
print("50 not in my_list:", 50 not in my_list)



7я╕ПтГг Bitwise Operators (ржмрж┐ржЯ ржЕржкрж╛рж░рзЗржЯрж░)

a = 5    # Binary: 0101
b = 3    # Binary: 0011

print("a & b:", a & b)   # 0101 & 0011 = 0001 тЖТ 1
print("a | b:", a | b)   # 0101 | 0011 = 0111 тЖТ 7
print("a ^ b:", a ^ b)   # 0101 ^ 0011 = 0110 тЖТ 6
print("~a:", ~a)         # ~0101 = -(5+1) = -6
print("a << 1:", a << 1) # 0101 тЖТ 1010 тЖТ 10
print("a >> 1:", a >> 1) # 0101 тЖТ 0010 тЖТ 2


ЁЯЯв рж╕ржВржХрзНрж╖рзЗржкрзЗ ржоржирзЗ рж░рж╛ржЦрж╛рж░ ржЯрзНрж░рж┐ржХ:
ржЕржкрж╛рж░рзЗржЯрж░ ржЯрж╛ржЗржк	ржкрзНрж░ржзрж╛ржи ржХрж╛ржЬ

Arithmetic	ржпрзЛржЧ-ржмрж┐рзЯрзЛржЧ-ржЧрзБржг-ржнрж╛ржЧ
Assignment	ржорж╛ржи рж╕рзЗржЯ ржХрж░рж╛
Comparison	рждрзБрж▓ржирж╛ ржХрж░рж╛
Logical	рж╢рж░рзНржд ржкрж░рзАржХрзНрж╖рж╛
Identity	ржПржХржЗ ржЕржмржЬрзЗржХрзНржЯ ржХрж┐ржирж╛
Membership	рж▓рж┐рж╕рзНржЯрзЗ ржЖржЫрзЗ ржХрж┐ржирж╛
Bitwise	ржмрж┐ржЯ рж▓рзЗржнрзЗрж▓ ржЕржкрж╛рж░рзЗрж╢ржи
'''
